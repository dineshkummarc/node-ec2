# Node EC2

Evended Node.js bindings to the EC2 Query API.

## Synopsis

## Installing

The easiest way to install is using npm.

```
npm install ec2
```

You can also checkout the source code for incusion in your `NODE_PATH` using
`git`. 

That is some example code for the synopsis. Then we go on and describe the
project in in more detail. The purpose, etc. We can have examples. Wouldn't it
be nice if we had a flavor of markup that would link to example code? Let's say
we add a special notation like {{createClient}} that will link to code.

```javascript
var i = 0;
```

Above is some highlighted code. There is more that we can do here. I'm curious
to know how someone would do a table, since tables are very popular.

Because `node-ec2` is a thin layer over the Amazon Query API, you can use the
[Amazon API
Reference](http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/index.html?query-apis.html)
to find your way around. Here's an example using
[RunInstances](http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/index.html?ApiReference-query-RunInstances.html).

```javascript
var ec2 = require("ec2");

var client = ec2.createClient(
{ key:      process.env["AWS_ACCESS_KEY_ID"]
, secret:   process.env["AWS_SECRET_ACCESS_KEY"]
});

var instanceId, reservationId;
client.call("RunInstances", {
  ImageId: "ami-2d4aa444", KeyName: "launch_key"
}, function (response) {
  reservationId   = response.reservationId;
  instanceId      = response.instancesSet[0].instanceId;
});
client.poll("DescribeInstances", function (struct) {
  var reservation = struct.reservationSet.filter(function (reservation) {
    return reservation.reservationId == reservationId;
  })[0];
  var instance = reservation.instancesSet.filter(function (instance) {
    return instance.instanceId == instanceId;
  })[0];
  return instance.instanceState.name == "running";
});
client.on("end", function () {
  console.log("Instance created with id: " + instanceId);
});

client.execute();
```

## Reference

namespace: ec2

Node EC2 exports the ec2 namespace, which includes a single factory method to
crate the Amazon EC2 Query API client object.

```javascript
var ec2 = require("ec2");
```
function: createClient

Creates an {{AmazonEC2Client}} object for use in ...

class: AmazonEC2Client

Communicates with the Amazon Query API.

function: call

Call an Amazon Query API action.

function: poll

parameter: name
parameter: parameters optional
parameter: callback   optional

Call an Amazon Query API action while a condition is false.

function: execute

Run the query.

event: error
parameter: error

Called when there is any error, both network errors, and exceptions thrown by
callbacks, so that you have a chance to release instances if things go wrong.

event: end

Called when all queries have completed successfully.
